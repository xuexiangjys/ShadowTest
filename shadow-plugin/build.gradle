apply plugin: 'com.android.application'

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.tencent.shadow.core:runtime-debug'
        classpath 'com.tencent.shadow.core:gradle-plugin'
        classpath 'org.javassist:javassist:3.22.0-GA'
    }
}


android {
    compileSdkVersion 28

    defaultConfig {
        applicationId project.SAMPLE_HOST_APP_APPLICATION_ID
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release {
            storeFile file("./debug.jks")
            storePassword "123456"
            keyAlias "debug"
            keyPassword "123456"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'

    implementation 'com.github.xuexiangjys:XQRCode:1.0.6'

}

apply plugin: 'com.tencent.shadow.plugin'

shadow {
    transform {
//        useHostContext = ['abc']
    }

    packagePlugin {
        pluginTypes {
            debug {
                loaderApkConfig = new Tuple2('shadow-loader-debug.apk', ':shadow-loader:assembleDebug')
                runtimeApkConfig = new Tuple2('shadow-runtime-debug.apk', ':shadow-runtime:assembleDebug')
                pluginApks {
                    pluginApk1 {
                        businessName = 'shadow-plugin'
                        partKey = 'shadow-plugin'
                        buildTask = ':shadow-plugin:assembleDebug'
                        apkName = 'shadow-plugin-debug.apk'
                        apkPath = 'shadow-plugin/build/outputs/apk/debug/shadow-plugin-debug.apk'
                        hostWhiteList = ["com.xuexiang.shadowcommon"]
                    }
                }
            }

            release {
                loaderApkConfig = new Tuple2('shadow-loader-release.apk', ':shadow-loader:assembleRelease')
                runtimeApkConfig = new Tuple2('shadow-runtime-release.apk', ':shadow-runtime:assembleRelease')
                pluginApks {
                    pluginApk1 {
                        businessName = 'shadow-plugin'
                        partKey = 'shadow-plugin'
                        buildTask = ':shadow-plugin:assembleRelease'
                        apkName = 'shadow-plugin-release.apk'
                        apkPath = 'shadow-plugin/build/outputs/apk/release/shadow-plugin-release.apk'
                        hostWhiteList = ["com.xuexiang.shadowcommon"]
                    }
                }
            }
        }

        loaderApkProjectPath = 'shadow-loader'
        runtimeApkProjectPath = 'shadow-runtime'

        archiveSuffix = System.getenv("PluginSuffix") ?: ""
        archivePrefix = 'plugin'
        destinationDir = "${getRootProject().getBuildDir()}"

        version = 4
        compactVersion = [1, 2, 3]
        uuidNickName = "1.1.5"
    }
}